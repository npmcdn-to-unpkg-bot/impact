buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.8.RELEASE")
        classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.7'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
//apply plugin: 'application'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'com.moowork.node'

//mainClassName = 'com.slalom.labs.impact.ImpactApplication'

jar {
    baseName = 'impact'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-remote-shell')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.postgresql:postgresql:9.4.1208.jre7')
    compile('mysql:mysql-connector-java:5.1.38')
    compile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Angel.SR6'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

// TODO: exclude everything but /dist from /webapp
//task clientJar(type: Jar) {
//    appendix = 'client'
//    from sourceSets.main.output
//    exclude('src/main/webapp/jspm_packages')
//}
//task clientBoot(type: BootRepackage, dependsOn: clientJar) {
//    withJarTask = clientJar
//}

assemble.dependsOn(npm_install, npm_run_build)
clean.dependsOn(npm_run_clean)
